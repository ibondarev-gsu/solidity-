package com.peartech.contracts;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.StaticStruct;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class GameV2 extends Contract {
    public static final String BINARY = "0x60c06040523480156200001157600080fd5b5060405162003d9938038062003d998339818101604052810190620000379190620003ec565b620000956040516020016200004c9062000481565b60405160208183030381529060405280519060200120604051602001620000739062000481565b60405160208183030381529060405280519060200120620001d960201b60201c565b620000f3604051602001620000aa9062000498565b60405160208183030381529060405280519060200120604051602001620000d19062000481565b60405160208183030381529060405280519060200120620001d960201b60201c565b6200012b604051602001620001089062000481565b60405160208183030381529060405280519060200120336200023c60201b60201c565b62000163604051602001620001409062000498565b60405160208183030381529060405280519060200120836200023c60201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050506200058d565b6000620001ec836200032d60201b60201c565b905081600080858152602001908152602001600020600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b6200024e82826200034c60201b60201c565b6200032957600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620002ce620003b660201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000806000838152602001908152602001600020600101549050919050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600081519050620003cf8162000559565b92915050565b600081519050620003e68162000573565b92915050565b6000806040838503121562000406576200040562000502565b5b60006200041685828601620003be565b92505060206200042985828601620003d5565b9150509250929050565b600062000442600a83620004af565b91506200044f8262000507565b600a82019050919050565b600062000469601083620004af565b9150620004768262000530565b601082019050919050565b60006200048e8262000433565b9150819050919050565b6000620004a5826200045a565b9150819050919050565b600081905092915050565b6000620004c782620004e2565b9050919050565b6000620004db82620004ba565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f574e45525f524f4c4500000000000000000000000000000000000000000000600082015250565b7f4449535452494255544f525f524f4c4500000000000000000000000000000000600082015250565b6200056481620004ba565b81146200057057600080fd5b50565b6200057e81620004ce565b81146200058a57600080fd5b50565b60805160601c60a05160601c6137b6620005e36000396000818161093101528181610ada01528181610d5201528181610efc015281816111730152818161131d0152611a1d015260006118ba01526137b66000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063a217fddf116100ad578063e58378bb11610071578063e58378bb1461030a578063f0bd87cc14610328578063f2f0387714610346578063f9a5918f14610362578063fe5090161461037e57610121565b8063a217fddf14610278578063bfe1092814610296578063d222871e146102b4578063d547741f146102d0578063db9b72c4146102ec57610121565b806336568abe116100f457806336568abe146101d657806391c05b0b146101f257806391d148541461020e578063921c45ca1461023e5780639a42f3aa1461025c57610121565b806301ffc9a714610126578063248a9ca3146101565780632f2ff15d146101865780633495655a146101a2575b600080fd5b610140600480360381019061013b9190612b70565b6103ae565b60405161014d9190613066565b60405180910390f35b610170600480360381019061016b9190612b03565b610428565b60405161017d9190613081565b60405180910390f35b6101a0600480360381019061019b9190612b30565b610447565b005b6101bc60048036038101906101b79190612b9d565b610468565b6040516101cd95949392919061318a565b60405180910390f35b6101f060048036038101906101eb9190612b30565b610661565b005b61020c60048036038101906102079190612b9d565b6106e4565b005b61022860048036038101906102239190612b30565b6114fc565b6040516102359190613066565b60405180910390f35b610246611566565b604051610253919061316f565b60405180910390f35b61027660048036038101906102719190612c0a565b61156c565b005b6102806118b1565b60405161028d9190613081565b60405180910390f35b61029e6118b8565b6040516102ab9190612f8b565b60405180910390f35b6102ce60048036038101906102c99190612c5d565b6118dc565b005b6102ea60048036038101906102e59190612b30565b6119fa565b005b6102f4611a1b565b604051610301919061309c565b60405180910390f35b610312611a3f565b60405161031f9190613081565b60405180910390f35b610330611a67565b60405161033d9190613081565b60405180910390f35b610360600480360381019061035b9190612bca565b611a8f565b005b61037c60048036038101906103779190612a96565b611d05565b005b61039860048036038101906103939190612a96565b6122b3565b6040516103a5919061316f565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104215750610420826122d8565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b61045082610428565b61045981612342565b6104638383612356565b505050565b6002602052806000526040600020600091509050806000015490806001016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff161515151581526020016000820160159054906101000a900460ff161515151581526020016000820160169054906101000a900460ff166003811115610542576105416134dd565b5b6003811115610554576105536134dd565b5b815260200160018201548152505090806003016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff161515151581526020016000820160159054906101000a900460ff161515151581526020016000820160169054906101000a900460ff166003811115610623576106226134dd565b5b6003811115610635576106346134dd565b5b8152602001600182015481525050908060050160009054906101000a900460ff16908060060154905085565b610669612436565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cd9061314f565b60405180910390fd5b6106e0828261243e565b5050565b6040516020016106f390612f76565b6040516020818303038152906040528051906020012061071281612342565b60006002600084815260200190815260200160002090508060030160000160169054906101000a900460ff1660038111156107505761074f6134dd565b5b8160010160000160169054906101000a900460ff166003811115610777576107766134dd565b5b14156107bd57827f66624a2ea04d723964b7325ea58b496e54d365957d5f1e150b68f812386bb7c76000806040516107b0929190613014565b60405180910390a261145f565b600160038111156107d1576107d06134dd565b5b8160010160000160169054906101000a900460ff1660038111156107f8576107f76134dd565b5b1415610bde5760026003811115610812576108116134dd565b5b8160030160000160169054906101000a900460ff166003811115610839576108386134dd565b5b148061087c5750600380811115610853576108526134dd565b5b8160030160000160169054906101000a900460ff16600381111561087a576108796134dd565b5b145b6108895761088861347f565b5b6002600381111561089d5761089c6134dd565b5b8160030160000160169054906101000a900460ff1660038111156108c4576108c36134dd565b5b1415610a3357827f66624a2ea04d723964b7325ea58b496e54d365957d5f1e150b68f812386bb7c78260030160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836006015460405161092792919061303d565b60405180910390a27f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8260010160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360030160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016040518463ffffffff1660e01b81526004016109db93929190612fa6565b602060405180830381600087803b1580156109f557600080fd5b505af1158015610a09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2d9190612ad6565b50610bd9565b600380811115610a4657610a456134dd565b5b8160030160000160169054906101000a900460ff166003811115610a6d57610a6c6134dd565b5b1415610bd857827f66624a2ea04d723964b7325ea58b496e54d365957d5f1e150b68f812386bb7c78260010160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360060154604051610ad092919061303d565b60405180910390a27f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8260030160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360010160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016040518463ffffffff1660e01b8152600401610b8493929190612fa6565b602060405180830381600087803b158015610b9e57600080fd5b505af1158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd69190612ad6565b505b5b61145e565b600380811115610bf157610bf06134dd565b5b8160010160000160169054906101000a900460ff166003811115610c1857610c176134dd565b5b14156110005760026003811115610c3257610c316134dd565b5b8160030160000160169054906101000a900460ff166003811115610c5957610c586134dd565b5b1480610c9d575060016003811115610c7457610c736134dd565b5b8160030160000160169054906101000a900460ff166003811115610c9b57610c9a6134dd565b5b145b610caa57610ca961347f565b5b60016003811115610cbe57610cbd6134dd565b5b8160030160000160169054906101000a900460ff166003811115610ce557610ce46134dd565b5b1415610e5457827f66624a2ea04d723964b7325ea58b496e54d365957d5f1e150b68f812386bb7c78260030160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360060154604051610d4892919061303d565b60405180910390a27f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8260010160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360030160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016040518463ffffffff1660e01b8152600401610dfc93929190612fa6565b602060405180830381600087803b158015610e1657600080fd5b505af1158015610e2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4e9190612ad6565b50610ffb565b60026003811115610e6857610e676134dd565b5b8160030160000160169054906101000a900460ff166003811115610e8f57610e8e6134dd565b5b1415610ffa57827f66624a2ea04d723964b7325ea58b496e54d365957d5f1e150b68f812386bb7c78260010160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360060154604051610ef292919061303d565b60405180910390a27f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8260030160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360010160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016040518463ffffffff1660e01b8152600401610fa693929190612fa6565b602060405180830381600087803b158015610fc057600080fd5b505af1158015610fd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff89190612ad6565b505b5b61145d565b60026003811115611014576110136134dd565b5b8160010160000160169054906101000a900460ff16600381111561103b5761103a6134dd565b5b14156114215760016003811115611055576110546134dd565b5b8160030160000160169054906101000a900460ff16600381111561107c5761107b6134dd565b5b14806110bf5750600380811115611096576110956134dd565b5b8160030160000160169054906101000a900460ff1660038111156110bd576110bc6134dd565b5b145b6110cc576110cb61347f565b5b6003808111156110df576110de6134dd565b5b8160030160000160169054906101000a900460ff166003811115611106576111056134dd565b5b141561127557827f66624a2ea04d723964b7325ea58b496e54d365957d5f1e150b68f812386bb7c78260030160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836006015460405161116992919061303d565b60405180910390a27f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8260010160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360030160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016040518463ffffffff1660e01b815260040161121d93929190612fa6565b602060405180830381600087803b15801561123757600080fd5b505af115801561124b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126f9190612ad6565b5061141c565b60016003811115611289576112886134dd565b5b8160030160000160169054906101000a900460ff1660038111156112b0576112af6134dd565b5b141561141b57827f66624a2ea04d723964b7325ea58b496e54d365957d5f1e150b68f812386bb7c78260010160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836006015460405161131392919061303d565b60405180910390a27f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8260030160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360010160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016040518463ffffffff1660e01b81526004016113c793929190612fa6565b602060405180830381600087803b1580156113e157600080fd5b505af11580156113f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114199190612ad6565b505b5b61145c565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114539061312f565b60405180910390fd5b5b5b5b61146b8160010161251f565b6114778160030161251f565b80600601600081548092919061148c90613436565b919050555060008160050160006101000a81548160ff021916908360028111156114b9576114b86134dd565b5b0217905550827fdf37221aaffab5daec18329c74e9de71f26727289dfefd6e144987965be79ef360006040516114ef91906130d2565b60405180910390a2505050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60035481565b60006002600085815260200190815260200160002090506000816000015414156115c2576040517fb70c1fec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160010160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561167857503373ffffffffffffffffffffffffffffffffffffffff168160030160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156116af576040517f1f42735400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160028111156116c3576116c26134dd565b5b8160050160009054906101000a900460ff1660028111156116e7576116e66134dd565b5b1461171e576040517fa05e34ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016003811115611732576117316134dd565b5b836003811115611745576117446134dd565b5b14158015611778575060026003811115611762576117616134dd565b5b836003811115611775576117746134dd565b5b14155b80156117a85750600380811115611792576117916134dd565b5b8360038111156117a5576117a46134dd565b5b14155b156117df576040517f20edc18500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160010160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561184d57611848816001018484612595565b61185c565b61185b816003018484612595565b5b3373ffffffffffffffffffffffffffffffffffffffff16847fc98953cfdaf1355ff1a9db2d4975230864cb314b479eb1b02301c65234912163856040516118a391906130b7565b60405180910390a350505050565b6000801b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516020016118eb90612f76565b6040516020818303038152906040528051906020012061190a81612342565b6000600260008581526020019081526020016000209050826002811115611934576119336134dd565b5b8160050160009054906101000a900460ff166002811115611958576119576134dd565b5b1415611990576040517fa05e34ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828160050160006101000a81548160ff021916908360028111156119b7576119b66134dd565b5b0217905550837fdf37221aaffab5daec18329c74e9de71f26727289dfefd6e144987965be79ef3846040516119ec91906130d2565b60405180910390a250505050565b611a0382610428565b611a0c81612342565b611a16838361243e565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b604051602001611a4e90612f27565b6040516020818303038152906040528051906020012081565b604051602001611a7690612f76565b6040516020818303038152906040528051906020012081565b6000600260008481526020019081526020016000209050600081600001541415611ae5576040517fb70c1fec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160010160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158015611b9b57503373ffffffffffffffffffffffffffffffffffffffff168160030160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15611bd2576040517f1f42735400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006002811115611be657611be56134dd565b5b8160050160009054906101000a900460ff166002811115611c0a57611c096134dd565b5b14611c41576040517fa05e34ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160010160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611cae57611ca981600101836126b7565b611cbc565b611cbb81600301836126b7565b5b3373ffffffffffffffffffffffffffffffffffffffff16837f2f63308b073d0d25029a549b999d196c6bbc8b3bdb3b694d879a74d070ddbe9a60405160405180910390a3505050565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d3e57600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610611d7b578284611d7e565b83835b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611dbc57600080fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611e4557600080fd5b60006040518060a001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200160001515815260200160001515815260200160006003811115611e9457611e936134dd565b5b81526020016000801b815250905060006040518060a001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200160001515815260200160001515815260200160006003811115611ef157611ef06134dd565b5b81526020016000801b815250905060036000815480929190611f1290613436565b91905055506040518060a00160405280600354815260200183815260200182815260200160006002811115611f4a57611f496134dd565b5b815260200160008152506002600060035481526020019081526020016000206000820151816000015560208201518160010160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690831515021790555060408201518160000160156101000a81548160ff02191690831515021790555060608201518160000160166101000a81548160ff0219169083600381111561202e5761202d6134dd565b5b021790555060808201518160010155505060408201518160030160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690831515021790555060408201518160000160156101000a81548160ff02191690831515021790555060608201518160000160166101000a81548160ff021916908360038111156120fa576120f96134dd565b5b021790555060808201518160010155505060608201518160050160006101000a81548160ff02191690836002811115612136576121356134dd565b5b021790555060808201518160060155905050600354600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600354600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff166003547f04030770e813dd055e97aa89673831d9b864cb7195e6f9b18b9520645a9da59660405160405180910390a4505050505050565b6001602052816000526040600020602052806000526040600020600091509150505481565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6123538161234e612436565b61272a565b50565b61236082826114fc565b61243257600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506123d7612436565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b61244882826114fc565b1561251b57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506124c0612436565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008160000160146101000a81548160ff02191690831515021790555060008160000160156101000a81548160ff02191690831515021790555060008160000160166101000a81548160ff02191690836003811115612581576125806134dd565b5b02179055506000801b816001018190555050565b8260000160159054906101000a900460ff16156125de576040517fa89ac15100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600101548360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838360405160200161261c93929190612fdd565b6040516020818303038152906040528051906020012014612669576040517f0af806e000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818360000160166101000a81548160ff021916908360038111156126905761268f6134dd565b5b021790555060018360000160156101000a81548160ff021916908315150217905550505050565b8160000160149054906101000a900460ff1615612700576040517ffc507a3100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80826001018190555060018260000160146101000a81548160ff0219169083151502179055505050565b61273482826114fc565b6127c3576127598173ffffffffffffffffffffffffffffffffffffffff1660146127c7565b6127678360001c60206127c7565b604051602001612778929190612f3c565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127ba91906130ed565b60405180910390fd5b5050565b6060600060028360026127da919061325d565b6127e49190613207565b67ffffffffffffffff8111156127fd576127fc61353b565b5b6040519080825280601f01601f19166020018201604052801561282f5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106128675761286661350c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106128cb576128ca61350c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261290b919061325d565b6129159190613207565b90505b60018111156129b5577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106129575761295661350c565b5b1a60f81b82828151811061296e5761296d61350c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806129ae9061340c565b9050612918565b50600084146129f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129f09061310f565b60405180910390fd5b8091505092915050565b600081359050612a12816136ed565b92915050565b600081519050612a2781613704565b92915050565b600081359050612a3c8161371b565b92915050565b600081359050612a5181613732565b92915050565b600081359050612a6681613749565b92915050565b600081359050612a7b81613759565b92915050565b600081359050612a9081613769565b92915050565b60008060408385031215612aad57612aac61356a565b5b6000612abb85828601612a03565b9250506020612acc85828601612a03565b9150509250929050565b600060208284031215612aec57612aeb61356a565b5b6000612afa84828501612a18565b91505092915050565b600060208284031215612b1957612b1861356a565b5b6000612b2784828501612a2d565b91505092915050565b60008060408385031215612b4757612b4661356a565b5b6000612b5585828601612a2d565b9250506020612b6685828601612a03565b9150509250929050565b600060208284031215612b8657612b8561356a565b5b6000612b9484828501612a42565b91505092915050565b600060208284031215612bb357612bb261356a565b5b6000612bc184828501612a81565b91505092915050565b60008060408385031215612be157612be061356a565b5b6000612bef85828601612a81565b9250506020612c0085828601612a2d565b9150509250929050565b600080600060608486031215612c2357612c2261356a565b5b6000612c3186828701612a81565b9350506020612c4286828701612a57565b9250506040612c5386828701612a2d565b9150509250925092565b60008060408385031215612c7457612c7361356a565b5b6000612c8285828601612a81565b9250506020612c9385828601612a6c565b9150509250929050565b612ca6816132b7565b82525050565b612cb5816132b7565b82525050565b612cc4816132c9565b82525050565b612cd3816132c9565b82525050565b612ce2816132d5565b82525050565b612cf1816132d5565b82525050565b612d008161335b565b82525050565b612d0f8161336d565b82525050565b612d1e8161336d565b82525050565b612d2d8161337f565b82525050565b612d3c81613391565b82525050565b612d4b816133a3565b82525050565b6000612d5c826131e0565b612d6681856131eb565b9350612d768185602086016133d9565b612d7f8161356f565b840191505092915050565b6000612d95826131e0565b612d9f81856131fc565b9350612daf8185602086016133d9565b80840191505092915050565b6000612dc86020836131eb565b9150612dd382613580565b602082019050919050565b6000612deb6011836131eb565b9150612df6826135a9565b602082019050919050565b6000612e0e600a836131fc565b9150612e19826135d2565b600a82019050919050565b6000612e316017836131fc565b9150612e3c826135fb565b601782019050919050565b6000612e546011836131fc565b9150612e5f82613624565b601182019050919050565b6000612e77602f836131eb565b9150612e828261364d565b604082019050919050565b6000612e9a6010836131fc565b9150612ea58261369c565b601082019050919050565b60a082016000820151612ec66000850182612c9d565b506020820151612ed96020850182612cbb565b506040820151612eec6040850182612cbb565b506060820151612eff6060850182612d06565b506080820151612f126080850182612cd9565b50505050565b612f2181613351565b82525050565b6000612f3282612e01565b9150819050919050565b6000612f4782612e24565b9150612f538285612d8a565b9150612f5e82612e47565b9150612f6a8284612d8a565b91508190509392505050565b6000612f8182612e8d565b9150819050919050565b6000602082019050612fa06000830184612cac565b92915050565b6000606082019050612fbb6000830186612cac565b612fc86020830185612cac565b612fd56040830184612d42565b949350505050565b6000606082019050612ff26000830186612cac565b612fff6020830185612d15565b61300c6040830184612ce8565b949350505050565b60006040820190506130296000830185612cac565b6130366020830184612d33565b9392505050565b60006040820190506130526000830185612cac565b61305f6020830184612f18565b9392505050565b600060208201905061307b6000830184612cca565b92915050565b60006020820190506130966000830184612ce8565b92915050565b60006020820190506130b16000830184612cf7565b92915050565b60006020820190506130cc6000830184612d15565b92915050565b60006020820190506130e76000830184612d24565b92915050565b600060208201905081810360008301526131078184612d51565b905092915050565b6000602082019050818103600083015261312881612dbb565b9050919050565b6000602082019050818103600083015261314881612dde565b9050919050565b6000602082019050818103600083015261316881612e6a565b9050919050565b60006020820190506131846000830184612f18565b92915050565b60006101a0820190506131a06000830188612f18565b6131ad6020830187612eb0565b6131ba60c0830186612eb0565b6131c8610160830185612d24565b6131d6610180830184612f18565b9695505050505050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061321282613351565b915061321d83613351565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613252576132516134ae565b5b828201905092915050565b600061326882613351565b915061327383613351565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156132ac576132ab6134ae565b5b828202905092915050565b60006132c282613331565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050613319826136c5565b919050565b600081905061332c826136d9565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613366826133b5565b9050919050565b60006133788261330b565b9050919050565b600061338a8261331e565b9050919050565b600061339c82613351565b9050919050565b60006133ae82613351565b9050919050565b60006133c0826133c7565b9050919050565b60006133d282613331565b9050919050565b60005b838110156133f75780820151818401526020810190506133dc565b83811115613406576000848401525b50505050565b600061341782613351565b9150600082141561342b5761342a6134ae565b5b600182039050919050565b600061344182613351565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613474576134736134ae565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f43686f69636520696e63636f7265637421000000000000000000000000000000600082015250565b7f4f574e45525f524f4c4500000000000000000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b7f4449535452494255544f525f524f4c4500000000000000000000000000000000600082015250565b600481106136d6576136d56134dd565b5b50565b600381106136ea576136e96134dd565b5b50565b6136f6816132b7565b811461370157600080fd5b50565b61370d816132c9565b811461371857600080fd5b50565b613724816132d5565b811461372f57600080fd5b50565b61373b816132df565b811461374657600080fd5b50565b6004811061375657600080fd5b50565b6003811061376657600080fd5b50565b61377281613351565b811461377d57600080fd5b5056fea264697066735822122021206f30c5bfaedb4f8e468360d5baa036c322db465bd653bb70b91ed6904d8764736f6c63430008070033";

    public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";

    public static final String FUNC_DISTRIBUTOR_ROLE = "DISTRIBUTOR_ROLE";

    public static final String FUNC_OWNER_ROLE = "OWNER_ROLE";

    public static final String FUNC_COMMIT = "commit";

    public static final String FUNC_CREATEROOM = "createRoom";

    public static final String FUNC_DISTRIBUTE = "distribute";

    public static final String FUNC_DISTRIBUTOR = "distributor";

    public static final String FUNC_GETROLEADMIN = "getRoleAdmin";

    public static final String FUNC_GETROOMBYID = "getRoomById";

    public static final String FUNC_GETROOMBYPLAYERADDRESSES = "getRoomByPlayerAddresses";

    public static final String FUNC_GRANTROLE = "grantRole";

    public static final String FUNC_HASROLE = "hasRole";

    public static final String FUNC_NEXTSTAGE = "nextStage";

    public static final String FUNC_RENOUNCEROLE = "renounceRole";

    public static final String FUNC_REVEAL = "reveal";

    public static final String FUNC_REVOKEROLE = "revokeRole";

    public static final String FUNC_ROOMCOUNTER = "roomCounter";

    public static final String FUNC_ROPS = "rops";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final Event COMMITED_EVENT = new Event("Commited", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event DISTRIBUTED_EVENT = new Event("Distributed", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>(true) {}, new TypeReference<Uint8>() {}));
    ;

    public static final Event GAMERESULT_EVENT = new Event("GameResult", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>(true) {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event REVEALED_EVENT = new Event("Revealed", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint8>() {}));
    ;

    public static final Event ROLEADMINCHANGED_EVENT = new Event("RoleAdminChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event ROLEGRANTED_EVENT = new Event("RoleGranted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event ROLEREVOKED_EVENT = new Event("RoleRevoked", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event ROOMCREATED_EVENT = new Event("RoomCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event STAGECHANGED_EVENT = new Event("StageChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>(true) {}, new TypeReference<Uint8>() {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
    }

    @Deprecated
    protected GameV2(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected GameV2(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected GameV2(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected GameV2(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<CommitedEventResponse> getCommitedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(COMMITED_EVENT, transactionReceipt);
        ArrayList<CommitedEventResponse> responses = new ArrayList<CommitedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            CommitedEventResponse typedResponse = new CommitedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.roomId = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.player = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<CommitedEventResponse> commitedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, CommitedEventResponse>() {
            @Override
            public CommitedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(COMMITED_EVENT, log);
                CommitedEventResponse typedResponse = new CommitedEventResponse();
                typedResponse.log = log;
                typedResponse.roomId = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.player = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<CommitedEventResponse> commitedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(COMMITED_EVENT));
        return commitedEventFlowable(filter);
    }

    public List<DistributedEventResponse> getDistributedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DISTRIBUTED_EVENT, transactionReceipt);
        ArrayList<DistributedEventResponse> responses = new ArrayList<DistributedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DistributedEventResponse typedResponse = new DistributedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.roomId = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.stage = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DistributedEventResponse> distributedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DistributedEventResponse>() {
            @Override
            public DistributedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DISTRIBUTED_EVENT, log);
                DistributedEventResponse typedResponse = new DistributedEventResponse();
                typedResponse.log = log;
                typedResponse.roomId = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.stage = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DistributedEventResponse> distributedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DISTRIBUTED_EVENT));
        return distributedEventFlowable(filter);
    }

    public List<GameResultEventResponse> getGameResultEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(GAMERESULT_EVENT, transactionReceipt);
        ArrayList<GameResultEventResponse> responses = new ArrayList<GameResultEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            GameResultEventResponse typedResponse = new GameResultEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.roomId = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.winner = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.gameId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<GameResultEventResponse> gameResultEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, GameResultEventResponse>() {
            @Override
            public GameResultEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(GAMERESULT_EVENT, log);
                GameResultEventResponse typedResponse = new GameResultEventResponse();
                typedResponse.log = log;
                typedResponse.roomId = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.winner = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.gameId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<GameResultEventResponse> gameResultEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(GAMERESULT_EVENT));
        return gameResultEventFlowable(filter);
    }

    public List<RevealedEventResponse> getRevealedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(REVEALED_EVENT, transactionReceipt);
        ArrayList<RevealedEventResponse> responses = new ArrayList<RevealedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RevealedEventResponse typedResponse = new RevealedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.roomId = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.player = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.choice = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RevealedEventResponse> revealedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RevealedEventResponse>() {
            @Override
            public RevealedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(REVEALED_EVENT, log);
                RevealedEventResponse typedResponse = new RevealedEventResponse();
                typedResponse.log = log;
                typedResponse.roomId = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.player = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.choice = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RevealedEventResponse> revealedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(REVEALED_EVENT));
        return revealedEventFlowable(filter);
    }

    public List<RoleAdminChangedEventResponse> getRoleAdminChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, transactionReceipt);
        ArrayList<RoleAdminChangedEventResponse> responses = new ArrayList<RoleAdminChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleAdminChangedEventResponse>() {
            @Override
            public RoleAdminChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, log);
                RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEADMINCHANGED_EVENT));
        return roleAdminChangedEventFlowable(filter);
    }

    public List<RoleGrantedEventResponse> getRoleGrantedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEGRANTED_EVENT, transactionReceipt);
        ArrayList<RoleGrantedEventResponse> responses = new ArrayList<RoleGrantedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleGrantedEventResponse>() {
            @Override
            public RoleGrantedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEGRANTED_EVENT, log);
                RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEGRANTED_EVENT));
        return roleGrantedEventFlowable(filter);
    }

    public List<RoleRevokedEventResponse> getRoleRevokedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEREVOKED_EVENT, transactionReceipt);
        ArrayList<RoleRevokedEventResponse> responses = new ArrayList<RoleRevokedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleRevokedEventResponse>() {
            @Override
            public RoleRevokedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEREVOKED_EVENT, log);
                RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEREVOKED_EVENT));
        return roleRevokedEventFlowable(filter);
    }

    public List<RoomCreatedEventResponse> getRoomCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROOMCREATED_EVENT, transactionReceipt);
        ArrayList<RoomCreatedEventResponse> responses = new ArrayList<RoomCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoomCreatedEventResponse typedResponse = new RoomCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.roomId = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.player0 = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.player1 = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoomCreatedEventResponse> roomCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoomCreatedEventResponse>() {
            @Override
            public RoomCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROOMCREATED_EVENT, log);
                RoomCreatedEventResponse typedResponse = new RoomCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.roomId = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.player0 = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.player1 = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoomCreatedEventResponse> roomCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROOMCREATED_EVENT));
        return roomCreatedEventFlowable(filter);
    }

    public List<StageChangedEventResponse> getStageChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(STAGECHANGED_EVENT, transactionReceipt);
        ArrayList<StageChangedEventResponse> responses = new ArrayList<StageChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            StageChangedEventResponse typedResponse = new StageChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.roomId = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.stage = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<StageChangedEventResponse> stageChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, StageChangedEventResponse>() {
            @Override
            public StageChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(STAGECHANGED_EVENT, log);
                StageChangedEventResponse typedResponse = new StageChangedEventResponse();
                typedResponse.log = log;
                typedResponse.roomId = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.stage = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<StageChangedEventResponse> stageChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(STAGECHANGED_EVENT));
        return stageChangedEventFlowable(filter);
    }

    public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEFAULT_ADMIN_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<byte[]> DISTRIBUTOR_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DISTRIBUTOR_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<byte[]> OWNER_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNER_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<TransactionReceipt> commit(BigInteger roomId, byte[] commitment) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_COMMIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(roomId), 
                new org.web3j.abi.datatypes.generated.Bytes32(commitment)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> createRoom(String playerA, String playerB) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATEROOM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(playerA), 
                new org.web3j.abi.datatypes.Address(playerB)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> distribute(BigInteger roomId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DISTRIBUTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(roomId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> distributor() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DISTRIBUTOR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETROLEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<Tuple5<BigInteger, Player, Player, BigInteger, BigInteger>> getRoomById(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETROOMBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Player>() {}, new TypeReference<Player>() {}, new TypeReference<Uint8>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple5<BigInteger, Player, Player, BigInteger, BigInteger>>(function,
                new Callable<Tuple5<BigInteger, Player, Player, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple5<BigInteger, Player, Player, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<BigInteger, Player, Player, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (Player) results.get(1), 
                                (Player) results.get(2), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> getRoomByPlayerAddresses(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETROOMBYPLAYERADDRESSES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(param0), 
                new org.web3j.abi.datatypes.Address(param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> nextStage(BigInteger roomId, BigInteger stage) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_NEXTSTAGE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(roomId), 
                new org.web3j.abi.datatypes.generated.Uint8(stage)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> reveal(BigInteger roomId, BigInteger choice, byte[] key) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVEAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(roomId), 
                new org.web3j.abi.datatypes.generated.Uint8(choice), 
                new org.web3j.abi.datatypes.generated.Bytes32(key)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> roomCounter() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ROOMCOUNTER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> rops() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ROPS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    @Deprecated
    public static GameV2 load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new GameV2(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static GameV2 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new GameV2(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static GameV2 load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new GameV2(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static GameV2 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new GameV2(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<GameV2> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _distributor, String _rops) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_distributor), 
                new org.web3j.abi.datatypes.Address(_rops)));
        return deployRemoteCall(GameV2.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<GameV2> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _distributor, String _rops) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_distributor), 
                new org.web3j.abi.datatypes.Address(_rops)));
        return deployRemoteCall(GameV2.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<GameV2> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _distributor, String _rops) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_distributor), 
                new org.web3j.abi.datatypes.Address(_rops)));
        return deployRemoteCall(GameV2.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<GameV2> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _distributor, String _rops) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_distributor), 
                new org.web3j.abi.datatypes.Address(_rops)));
        return deployRemoteCall(GameV2.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class Player extends StaticStruct {
        public String playerAddress;

        public Boolean commited;

        public Boolean revealed;

        public BigInteger choice;

        public byte[] commitment;

        public Player(String playerAddress, Boolean commited, Boolean revealed, BigInteger choice, byte[] commitment) {
            super(new org.web3j.abi.datatypes.Address(playerAddress),new org.web3j.abi.datatypes.Bool(commited),new org.web3j.abi.datatypes.Bool(revealed),new org.web3j.abi.datatypes.generated.Uint8(choice),new org.web3j.abi.datatypes.generated.Bytes32(commitment));
            this.playerAddress = playerAddress;
            this.commited = commited;
            this.revealed = revealed;
            this.choice = choice;
            this.commitment = commitment;
        }

        public Player(Address playerAddress, Bool commited, Bool revealed, Uint8 choice, Bytes32 commitment) {
            super(playerAddress,commited,revealed,choice,commitment);
            this.playerAddress = playerAddress.getValue();
            this.commited = commited.getValue();
            this.revealed = revealed.getValue();
            this.choice = choice.getValue();
            this.commitment = commitment.getValue();
        }
    }

    public static class CommitedEventResponse extends BaseEventResponse {
        public BigInteger roomId;

        public String player;
    }

    public static class DistributedEventResponse extends BaseEventResponse {
        public BigInteger roomId;

        public BigInteger stage;
    }

    public static class GameResultEventResponse extends BaseEventResponse {
        public BigInteger roomId;

        public String winner;

        public BigInteger gameId;
    }

    public static class RevealedEventResponse extends BaseEventResponse {
        public BigInteger roomId;

        public String player;

        public BigInteger choice;
    }

    public static class RoleAdminChangedEventResponse extends BaseEventResponse {
        public byte[] role;

        public byte[] previousAdminRole;

        public byte[] newAdminRole;
    }

    public static class RoleGrantedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class RoleRevokedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class RoomCreatedEventResponse extends BaseEventResponse {
        public BigInteger roomId;

        public String player0;

        public String player1;
    }

    public static class StageChangedEventResponse extends BaseEventResponse {
        public BigInteger roomId;

        public BigInteger stage;
    }
}
